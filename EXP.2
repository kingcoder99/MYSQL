Experiment 2: Sequence Management.

Aim: Create a sequence named emp seq with the following specifications:
• Starts at 1000
• Increments by 10
• Has a maximum value of 2000
• Cycles when the max value is reached
Then, write a PL/SQL block to fetch and display the next 5 values of the sequence.


• PL/SQL: The procedural extension to SQL, used to write and execute the program.
• DBMS_OUTPUT.PUT_LINE: A built-in PL/SQL procedure used to output data to
the console.
• Oracle SQL: Used to create and configure the sequence in the database.

Code:
SQL> CREATE SEQUENCE employee_seq 
  2   START WITH 1000 
  3   INCREMENT BY 10 
  4   MAXVALUE 2000 
  5   CYCLE;

Sequence created. 

SQL> SET SERVEROUTPUT ON; 
SQL> DECLARE 
  2   v_seq_val NUMBER; 
  3 BEGIN 
  4   FOR i IN 1..5 LOOP 
  5     SELECT employee_seq.NEXTVAL INTO v_seq_val FROM dual; 
  6     DBMS_OUTPUT.PUT_LINE('Sequence Value ' || i || ': ' || v_seq_val); 
  7   END LOOP; 
  8 END; 
  9/

Sequence Value 1: 1000 
Sequence Value 2: 1010 
Sequence Value 3: 1020 
Sequence Value 4: 1030 
Sequence Value 5: 1040 

PL/SQL procedure successfully completed.


Learning Outcomes:
• Learners will understand how to create and configure a sequence in Oracle.
• Learners will be able to write a PL/SQL block to fetch multiple values from a
sequence.
• Learners will gain practical experience working with sequences in database
applications.

Conclusion:
This exercise demonstrated how to create a sequence in Oracle with specific
specifications such as starting value, increment, maximum value, and cycling
behavior. It also illustrated how to write a PL/SQL block to fetch and display
multiple values from the sequence.